[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    '^\s*\.\.\.\s*$',
    '^\s*pass\s*$',
    '^\s*raise NotImplementedError\s*$',
]

[tool.coverage.run]
branch = true
relative_files = true
source = ["virtual_library_card", "virtuallibrarycard"]

[tool.django-stubs]
django_settings_module = "virtual_library_card.settings.dev"

[tool.isort]
profile = "black"

[tool.mypy]
# TODO: Enable the the check_untyped_defs option
# This will get rid of the warnings that we get when running mypy
# > note: By default the bodies of untyped functions are not checked
# However this currently causes a number of errors to surface that will
# need to be cleaned up before we can enable the option.
# check_untyped_defs = true
# When we enable this option, we should remove this disable. Its just here
# to silence the noise in the mypy output for now, so its easier to see when
# there are errors in the output.
disable_error_code = "annotation-unchecked"
files = ["."]
plugins = ["mypy_django_plugin.main"]
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
# This override silences errors for modules we import that don't currently
# have type hints, or type stubs that cover them. We should go through this
# list periodically and remove modules that have since added type hints.
ignore_missing_imports = true
module = [
    "better_profanity.*",
    "crispy_forms.*",
    "dal.*",
    "datedelta.*",
    "localflavor.*",
    "parameterized.*",
    "rest_framework.*",
    "uwsgi.*",
    # This is ignored because the file is created when building a container
    # so it typically doesn't exist when running mypy, but since it only
    # contains a couple version strings it can be safely ignored
    "virtual_library_card._version",
]

[tool.poetry]
authors = ["The Palace Project <info@thepalaceproject.org>"]
description = "Virtual Library Card Creator"
homepage = "https://thepalaceproject.org"
license = "Apache-2.0"
name = "Virtual Library Card"
packages = [
    {include = "virtual_library_card"},
    {include = "virtuallibrarycard"},
]
readme = "README.md"
repository = "https://github.com/ThePalaceProject/virtual-library-card"
version = "0"  # Version number is managed with tags in git

[tool.poetry.dependencies]
attrs = "^23.1.0"
better-profanity = "^0.7.0"
boto3 = "^1.26.90"
certifi = "2024.6.2"
chardet = "^5.1.0"
crispy-bootstrap4 = "^2024.1"
crispy-forms-materialize = "0.2"
datedelta = "1.4"
Django = "^4.2.3"
django-absoluteuri = "1.3.0"
django-appconf = "1.0.6"
django-autocomplete-light = "^3.9.4"
django-bootstrap4 = "^24.1"
django-compressor = "^4.4"
django-compressor-postcss = "0.8.2"
django-crispy-forms = "2.2"
django-htmlmin = "0.11.0"
django-localflavor = "4.0"
django-localflavor-us = "1.1"
django-material = "1.12.0"
django-materialize-css = "0.0.1"
django-recaptcha = "^4.0.0"
django-render-block = "0.9.2"
django-storages = "^1.13.2"
djangorestframework = "3.15.1"
jinja2 = "3.1.4"
Pillow = "10.3.0"
psycopg2-binary = "2.9.9"
PyJWT = "^2.6.0"
python = ">=3.8,<4"
python-stdnum = "1.20"
pytz = "^2024.1"
pyuwsgi = ">=2.0,<2.1"
requests = "^2.31"
setuptools = "^71.0.3"

[tool.poetry.group.ci.dependencies]
dunamai = "^1.16"
pre-commit = "^3.0"
tox = "^4.5"
tox-docker = "^5.0"
tox-gh-actions = "^3.0"

[tool.poetry.group.dev.dependencies]
django-stubs = {version = "^5.0.2", extras = ["compatible-mypy"]}
mypy = "^1.7.0"
parameterized = "^0.9"
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-django = "^4.5.2"
types-requests = "^2.28.11"

[tool.pytest.ini_options]
addopts = [
    "--cov",
    "--cov-report=xml",
]
DJANGO_SETTINGS_MODULE = "virtual_library_card.settings.dev"

[tool.tomlsort]
ignore_case = true
in_place = true
sort_inline_arrays = true
sort_table_keys = true
spaces_before_inline_comment = 2
spaces_indent_inline_array = 4
trailing_comma_inline_array = true
