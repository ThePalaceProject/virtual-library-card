"""
Django settings for virtual_library_card project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "dal",
    "dal_select2",
    "django.contrib.admin",
    "localflavor",
    "rest_framework",
    "bootstrap4",
    "crispy_forms",
    "crispy_bootstrap4",
    "material",
    "compressor",
    "absoluteuri",
    "virtuallibrarycard.apps.VirtuallibrarycardConfig",
    "django_recaptcha",
]

# Log level is taken from the env
LOGLEVEL = os.getenv("DJANGO_LOG_LEVEL", "INFO")
LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "full",
        }
    },
    "formatters": {
        "full": {
            "format": "{asctime} [{levelname}] {name}: {message}",
            "style": "{",
        }
    },
    "loggers": {
        "django": {
            "handlers": ["console"],
            "level": "INFO",
        },
        "app": {
            "handlers": ["console"],
            "level": LOGLEVEL,
            "propagate": False,
        },
        "root": {
            "handlers": ["console"],
            "level": LOGLEVEL,
        },
    },
}

REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly"
    ],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
}

CRISPY_TEMPLATE_PACK = "bootstrap4"

CRISPY_ALLOWED_TEMPLATE_PACKS = (
    "bootstrap",
    "uni_form",
    "bootstrap3",
    "bootstrap4",
    "materialize_css_forms",
)

AUTH_USER_MODEL = "virtuallibrarycard.CustomUser"

MIDDLEWARE = [
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
]

USE_I18N = True

ROOT_URLCONF = "virtual_library_card.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "../templates/django")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.template.context_processors.i18n",
                "django.template.context_processors.media",
                "django.template.context_processors.static",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
    {
        "BACKEND": "django.template.backends.jinja2.Jinja2",
        "DIRS": [os.path.join(BASE_DIR, "../templates/jinja")],
        "APP_DIRS": True,
        "OPTIONS": {
            "environment": "virtual_library_card.jinja2.Environment",
            "lstrip_blocks": True,
            "trim_blocks": True,
        },
    },
]
WSGI_APPLICATION = "virtual_library_card.wsgi.application"

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = "en"

LANGUAGES = [
    ("en", _("English")),
]

TIME_ZONE = "UTC"

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

PROJECT_PATH = os.path.dirname(os.path.abspath(__file__ + "/../../"))

STATICFILES_DIRS = [
    os.path.join(PROJECT_PATH, "static"),
]

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder",
    # other finders..
    "compressor.finders.CompressorFinder",
)

MEDIA_URL = "/media/"
STATIC_URL = "/static/"
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "compiled/media")
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "compiled/static")

LOCALE_PATHS = (os.path.join(BASE_DIR, "../../locale"),)

ACCOUNT_LOGIN_URL = "/accounts/login"

COMPRESS_CSS_FILTERS = ("compressor_postcss.PostCSSFilter",)

COMPRESS_POSTCSS_PLUGINS = ("autoprefixer", "postcss-font-magician")

SITE_ID = 1

DATE_INPUT_FORMATS = ["%m-%d-%Y"]
